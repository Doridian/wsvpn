tunnel:
  mtu: 1420
  subnet: 192.168.3.0/24 # Server will pick the first host from this, and assign others to clients in order
  mode: TUN # TUN or TAP
  allow-client-to-client: false # Allow clients to talk to other clients on the same server
  allow-ip-spoofing: false # TAP only: Allow clients to use any IP address and not just the assigned one (on TUN IPs are always enforced)
  allow-mac-changing: false # TAP only: Allow clients to only use a single unicast MAC address (the first one they communicate with)
  allowed-macs-per-connection: 1 # TAP only: Allow multiple MAC addresses per connection (requires allow-mac-changing=true)
  allow-unknown-ether-types: false # TAP only: allow unknown ether types (Anything other than ARP, IPv4)
  features:
    fragmentation: true # Enable packet fragmentation (default enabled), required for MTU > 1216 in WebTransport
    datagram_id_0: true
  ip-config:
    local: true # Configure local interface automatically
    remote: true # Send configuration data to clients for their interfaces
  ping:
    interval: 25s
    timeout: 5s

interface:
  name: "" # Name of the interface to use, will be used as a prefix is one-interface-per-connection is chosen
  persist: false
  component-id: root\tap0901 # Windows only. Defaults: root\tap0901 or tap0901

  # Warning: This below option will prevent all the tunnel->allow from taking effect. Use iptables as needed!
  one-interface-per-connection: false # Set to true to use separate interface per connection


scripts:
  # These scripts get run as "script operation subnet interface user"
  # User will not be present if no authentication is enabled
  # Example: "./handler.sh" might be called like "./handler.sh up 192.168.3.2/24 tun0 user"
  up: ""
  down: ""

server:
  listen: 127.0.0.1:9000
  enable-http3: false
  tls:
    client-ca: "" # Filename of CA for mTLS
    certificate: "" # Filename of certificate for TLS
    key: "" # Filename of private key for TLS
    config:
      min-version: 1.2
      max-version: 1.3
      cipher-preference: "" # blank, AES or CHACHA
      key-log-file: "" # This will log TLS secret keys to a file. DO NOT USE IN PRODUCTION!
  authenticator:
    type: allow-all # allow-all or htpasswd
    # allow-all: Just allow all clients regardless of authentication
    # htpasswd: Set config key to filename of a htpasswd-formatted file; Authenticates clients using HTTP Basic authentication
    config: ""
